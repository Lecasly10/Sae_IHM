#!/bin/bash

attend() {
    read -p "" 
}

push() {
	pull
    echo "Message du commit"
    read rep
    git config --global user.email "victorien.denoyelle@epitech.eu"
    git add -A
    git commit -m "$rep"
    git push
    echo -e "Push effectué\n"
}

pull() {
    git pull
    echo -e "Pull effectué\n"
}

clone() {
    echo "Répertoire à cloner"
    read rep
    git clone "$rep"
    echo -e "Clone effectué\n"
}

tag() {
    echo "Tag à créer :"
    read rep

    # Vérifie si le tag existe déjà
    if git rev-parse "$rep" >/dev/null 2>&1; then
        echo "⚠️  Le tag '$rep' existe déjà. Abandon."
    else
        git tag "$rep"
        echo -e "✅ Tag '$rep' créé\n"
        git push origin "$rep"
    fi
}

branche() {
    echo "Nom de la branche à créer :"
    read rep
    git checkout -b "$rep" #pour créer une nouvelle branche
    echo -e "Branche '$rep' créée\n"
}

retourner() {
    CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
    echo "Branche actuelle : $CURRENT_BRANCH"
    echo "Retour sur la branche 'main'"
    git checkout main || { echo "❌ Impossible de passer sur la branche 'main'"; return 1; }
    echo "Fusion de $CURRENT_BRANCH dans main"
    git merge $CURRENT_BRANCH #pour retourner sur main
    echo -e "✅ Maintenant sur la branche principale\n"
    echo "Branche actuelle : $(git rev-parse --abbrev-ref HEAD)"
}

supprBranche() {
    echo "Nom de la branche à supprimer :"
    read rep
    git branch -d "$rep" #pour supprimer une branche
    echo -e "Branche '$rep' supprimée\n"
}

voirBranche() {
    echo "Branche actuelle : $(git rev-parse --abbrev-ref HEAD)"
}

clear
select choix in "push" "pull" "clone" "status" "tag" "créer une branche" "retourner sur main branch" "supprimer une branche" "voir branche actuelle" "quitter"
do
    case $REPLY in
        1) push ;;
        2) pull ;;
        3) clone ;;
        4) git status ;;
        5) tag ;;
        6) branche ;;
        7) retourner ;;
        8) supprBranche ;;
        9) voirBranche ;;
        10) break ;;
        *) echo "Mauvaise entrée" ;;
    esac
	attend
	clear
done
